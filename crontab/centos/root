# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.VIcxTh/crontab installed on Thu Jun 20 18:30:52 2019)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command



#0   *   *   *   *    /bin/cleanCaches


# ==========================================================================================================================
# google farm - pull rendered frames from farm2 bucket as fast as possible
# ==========================================================================================================================
#*/15  * * * *  gsutil ls  gs://farm2/jobs/ | while read p ; do export path=$(basename $p) ; sudo gsutil -o GSUtil:parallel_composite_upload_threshold=150M -m  rsync -C -J -P -R -u -e  gs://farm2/jobs/$path/sam/render/ /atomo/jobs/$path/sam/render/ ; done >> /tmp/google.log


# ==========================================================================================================================
# make sure cluster is in sync, and allow it to start services without quorum if needed. Also, prevents reboots!
# ==========================================================================================================================
*   *   *   *   *       pvecm e 1
*   *   *   *   *       [ "$(pidof corosync)" == "" ] && systemctl restart corosync
*   *   *   *   *       [ "$(pvecm status | grep Nodes | awk '{print $(NF)}')" -lt 3 ] && echo restarting corosync...  &&  ( pvecm e 1 ; systemctl restart corosync && pvecm e 1)






